swagger: "2.0"
info:
  description: "書類選考自動化API<BR>ログイン後に取得されるaccess_tokenをAuthorization Bearerヘッダにセットする。<BR>access_tokenは15分。refresh_tokenは30日<BR>ログアウト後は対象のtokenは禁止tokenとしてredisに保存される"
  version: "0.0.1"
  title: "senko"
  contact:
    email: "eguchi@asial.co.jp"
host: "senko-asial.com"
basePath: "/api/v1/"
tags:
- name: "auth"
  description: "認証"
- name: "users"
  description: "アプリ利用者管理"
- name: "applicants"
  description: "応募者管理"
schemes:
- "https"
paths:
  /user:
    post:
      tags:
      - "users"
      summary: "ユーザー登録"
      description: "アクセストークン(15分)、リフレッシュトークン(30日)を返却する。"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UserRegist"
      responses:
        201:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Token"
        400:
          description: "parameter error"
        401:
          description: "unauthorised token error"
        422:
          description: "unauthorised token error"
        500:
          description: "internal server error"
  /user/list/{limit}/{page}:
    get:
      tags:
      - "users"
      summary: "ユーザー一覧"
      description: "ユーザー一覧。TODO ページング"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: page
          in: path
          description: "ページ番号"
          required: true
          type: integer
        - name: limit
          in: path
          description: "取得件数"
          required: true
          type: integer
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserList"
        400:
          description: "parameter error"
        401:
          description: "unauthorised token error"
        422:
          description: "unauthorised token error"
        500:
          description: "internal server error"
  /user/login:
    post:
      tags:
      - "auth"
      summary: "ログイン"
      description: "アクセストークン(15分)、リフレッシュトークン(30日)を返却する。<BR>以降、AuthorizationヘッダにBearerトークンを付与して使用する。"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UserLogin"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Token"
        400:
          description: "parameter error"
        401:
          description: "unauthorised token error"
        422:
          description: "unauthorised token error"
        500:
          description: "internal server error"
  /user/logout:
    post:
      tags:
      - "auth"
      summary: "ログアウト"
      description: "access_tokenをrevoked状態にする。tokenはredisに詰められる。ログアウトを実施する。"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: header
          name: Authorization:Bearer {access_token}
          type: string
          required: true
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TokenRevoked"
        400:
          description: "parameter error"
        401:
          description: "unauthorised token error"
        422:
          description: "unauthorised token error"
        500:
          description: "internal server error"
  /applicant:
    post:
      tags:
      - "applicants"
      summary: "応募者登録"
      description: "応募者の新規登録"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: header
        name: Authorization:Bearer {access_token}
        type: string
        required: true
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ApplicantPost"
      responses:
        201:
          description: "created."
        400:
          description: "parameter error"
        401:
          description: "unauthorised token error"
        422:
          description: "unauthorised token error"
        500:
          description: "internal server error"
  /applicant/list/{limit}/{page}:
    get:
      tags:
      - "applicants"
      summary: "応募者一覧"
      description: "応募者一覧"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: header
          name: Authorization:Bearer {access_token}
          type: string
          required: true
        - name: page
          in: path
          description: "ページ番号"
          required: true
          type: integer
        - name: limit
          in: path
          description: "取得件数"
          required: true
          type: integer
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApplicantList"
        400:
          description: "parameter error"
        401:
          description: "unauthorised token error"
        422:
          description: "unauthorised token error"
        500:
          description: "internal server error"
definitions:
  UserList:
    type: "object"
    example:
      {
        "users": [
          {
              "email": "eguchi@asial.co.jp",
              "name": "eguchi"
          }
        ]
      }
  Token:
    type: "object"
    example:
      message: Logged in as taro
      access_token: eyJ0eXAiOiJ...
      refresh_token: eyJ0eXAiOi...
  
  TokenRevoked:
    type: "object"
    example:
      {
        "message": "Access token has been revoked"
      }
  
  UserRegist:
    type: "object"
    required:
    - "username"
    - "email"
    - "password"
    properties:
      email:
        type: "string"
        example: "eguchi@asial.co.jp"
      password:
        type: "string"
        example: "hogehogehoge"
      username:
        type: "string"
        example: "asial"
      
  UserLogin:
    type: "object"
    required:
    - "id"
    - "password"
    - "service_id"
    properties:
      id:
        type: "string"
        example: "eguchi@asial.co.jp"
      password:
        type: "string"
        example: "hogehogehoge"
      service_id:
        type: "string"
        example: "asial"
  ApplicantPost:
    type: "object"
    required:
    - "name"
    - "sex"
    - "birth"
    - "reason"
    - "paper"
    - "address"
    properties:
      name:
        type: "string"
        example: "田中 太郎"
      sex:
        type: "integer"
        example: 1
      birth:
        type: "string"
        example: "1986-05-26"
      address:
        type: "string"
        example: "東京都町田市***町2-2-1"
      zip1:
        type: "integer"
        example: 220
      zip2:
        type: "integer"
        example: 1412
      final_education:
        type: "string"
        example: "立教大学文学部史学科"
      reason:
        type: "string"
        example: "志望動機"
      pr:
        type: "string"
        example: "自己PR"
      other:
        type: "string"
        example: "その他・備考"
      face_url:
        type: string
        format: binary
        example: "multipart form data"
      paper:
        type: string
        format: binary
        example: "multipart form data"

  ApplicantList:
    type: "object"
    required:
    - "name"
    - "address"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "田中 太郎"
      photo_url:
        type: "string"
        example: "http://hogegoge/pic/111"
      status:
        type: "string"
        description: "選考ステータス"
        enum:
        - "new"
        - "pending"
        - "thinking0"
        - "thinking1"
        - "thinking2"
        - "ok"
        - "ng"
    xml:
      name: "Senko"