swagger: "2.0"
info:
  description: "書類選考自動化API"
  version: "0.0.1"
  title: "senko"
  contact:
    email: "eguchi@asial.co.jp"
host: "senko-asial.com"
basePath: "/api/v1/"
tags:
- name: "auth"
  description: "認証"
- name: "applicants"
  description: "応募者"
schemes:
- "https"
paths:
  /users/login:
    post:
      tags:
      - "auth"
      summary: "ログイン"
      description: "アクセストークン(15分)、リフレッシュトークン(30日)を返却する。<BR>以降、AuthorizationヘッダにBearerトークンを付与して使用する。"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UserLogin"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Token"
        400:
          description: "parameter error"
        401:
          description: "unauthorised token error"
        422:
          description: "unauthorised token error"
        500:
          description: "internal server error"
  /applicants:
    post:
      tags:
      - "applicants"
      summary: "応募者登録"
      description: "応募者の新規登録"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ApplicantPost"
      responses:
        201:
          description: "created."
        400:
          description: "parameter error"
        401:
          description: "unauthorised token error"
        422:
          description: "unauthorised token error"
        500:
          description: "internal server error"
    get:
      tags:
      - "applicants"
      summary: "応募者一覧取得"
      description: "応募者一覧取得 ページ指定 件数指定"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "取得件数"
        required: false
        type: "integer"
        default: 20
      - name: "page"
        in: "query"
        description: "ページ"
        required: false
        type: "integer"
        default: 1
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Applicant"
        400:
          description: "Invalid tag value"
  /person/list/search/{word}:
    get:
      tags:
      - "applicants"
      summary: "応募者フリーワード検索"
      description: "応募者一覧取得 部分一致検索"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: "word"
        description: "検索文字列"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Applicant"
        400:
          description: "Invalid tag value"
definitions:
  Token:
    type: "object"
    example:
      message: Logged in as taro
      access_token: eyJ0eXAiOiJ...
      refresh_token: eyJ0eXAiOi...
      
  UserLogin:
    type: "object"
    required:
    - "id"
    - "password"
    - "service_id"
    properties:
      id:
        type: "string"
        example: "eguchi@asial.co.jp"
      password:
        type: "string"
        example: "hogehogehoge"
      service_id:
        type: "string"
        example: "asial"
  ApplicantPost:
    type: "object"
    required:
    - "name"
    - "sex"
    - "birth"
    - "reason"
    - "paper"
    - "address"
    properties:
      name:
        type: "string"
        example: "田中 太郎"
      sex:
        type: "integer"
        example: 1
      birth:
        type: "string"
        example: "1986-05-26"
      address:
        type: "string"
        example: "東京都町田市***町2-2-1"
      zip1:
        type: "integer"
        example: 220
      zip2:
        type: "integer"
        example: 1412
      highschool:
        type: "string"
        example: "東京都立豊多摩高等学校"
      university:
        type: "string"
        example: "立教大学文学部史学科"
      reason:
        type: "string"
        example: "志望動機"
      pr:
        type: "string"
        example: "自己PR"
      other:
        type: "string"
        example: "その他・備考"
      face_url:
        type: string
        format: binary
        example: "multipart form data"
      paper:
        type: string
        format: binary
        example: "multipart form data"

  Applicant:
    type: "object"
    required:
    - "name"
    - "address"
    properties:
      applicant_id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "田中 太郎"
      photo_url:
        type: "string"
        example: "http://hogegoge/pic/111"
      status:
        type: "string"
        description: "選考ステータス"
        enum:
        - "new"
        - "pending"
        - "thinking0"
        - "thinking1"
        - "thinking2"
        - "ok"
        - "ng"
    xml:
      name: "Senko"